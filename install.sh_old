#!/bin/bash

set -e

# Cores para mensagens
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Diret√≥rio base dos dotfiles (assumimos que √© onde este script est√° localizado)
DOTFILES_DIR="$(cd "$(dirname "$0")" && pwd)"
cd "$DOTFILES_DIR"

# Flags
FORCE=false
if [[ "$1" == "--force" ]]; then
  FORCE=true
  echo -e "${YELLOW}For√ßando reinstala√ß√£o dos dotfiles com stow -D...${NC}"
fi

#--------------------------------------------------------------
# 1. Atualiza sistema e instala pacotes essenciais
#--------------------------------------------------------------
PACKAGES=(zsh git curl stow gpg)

echo -e "${YELLOW}üì¶ Atualizando pacotes e instalando depend√™ncias...${NC}"
sudo apt update && sudo apt install -y "${PACKAGES[@]}"

#--------------------------------------------------------------
# 2. Instala LazyGit com fallback
#--------------------------------------------------------------
echo -e "${YELLOW}‚öôÔ∏è  Instalando LazyGit...${NC}"
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*')
if [ -z "$LAZYGIT_VERSION" ]; then
  echo -e "${RED}‚ö†Ô∏è  N√£o foi poss√≠vel obter a vers√£o do lazygit. Pulando instala√ß√£o.${NC}"
else
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
  tar xf lazygit.tar.gz lazygit
  sudo install lazygit -D -t /usr/local/bin/
  rm -f lazygit lazygit.tar.gz
fi

#--------------------------------------------------------------
# 3. Instala eza (substituto moderno do ls)
#--------------------------------------------------------------
echo -e "${YELLOW}üìÅ Instalando eza...${NC}"
sudo mkdir -p /etc/apt/keyrings
wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | sudo gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | sudo tee /etc/apt/sources.list.d/gierens.list
sudo chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
sudo apt update
sudo apt install -y eza

#--------------------------------------------------------------
# 4. Instala Oh My Zsh sem sobrescrever configs
#--------------------------------------------------------------
if [ ! -d "$HOME/.oh-my-zsh" ]; then
  echo -e "${YELLOW}üß† Instalando oh-my-zsh...${NC}"
  export RUNZSH=no
  export KEEP_ZSHRC=yes
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
  echo -e "${GREEN}‚úîÔ∏è  Oh-my-zsh j√° est√° instalado.${NC}"
fi

#--------------------------------------------------------------
# 5. Plugins ZSH
#--------------------------------------------------------------
ZSH_CUSTOM=${ZSH_CUSTOM:-~/.oh-my-zsh/custom}
echo -e "${YELLOW}üîå Instalando plugins ZSH...${NC}"
[ ! -d "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting" ] && \
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting"

[ ! -d "$ZSH_CUSTOM/plugins/zsh-autosuggestions" ] && \
  git clone https://github.com/zsh-users/zsh-autosuggestions "$ZSH_CUSTOM/plugins/zsh-autosuggestions"

#--------------------------------------------------------------
# 6. Instala NVM (Node Version Manager)
#--------------------------------------------------------------
echo -e "${YELLOW}üì¶ Instalando nvm...${NC}"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash

#--------------------------------------------------------------
# 7. Instala Starship (prompt moderno)
#--------------------------------------------------------------
echo -e "${YELLOW}‚ú® Instalando Starship...${NC}"
curl -sS https://starship.rs/install.sh | sh -s -- -y

#--------------------------------------------------------------
# 8. Aplica os dotfiles com safe-stow
#--------------------------------------------------------------
echo -e "${YELLOW}üîó Aplicando dotfiles com stow...${NC}"
for module in zsh git ssh; do
  $FORCE && stow -D "$module"
  ./safe-stow.sh "$module"
done

#--------------------------------------------------------------
# 9. Cria estrutura de pastas de projetos
#--------------------------------------------------------------
mkdir -p ~/Projects/{Work,Personal}

#--------------------------------------------------------------
# 10. Troca shell padr√£o para zsh
#--------------------------------------------------------------
if [ "$SHELL" != "$(which zsh)" ]; then
  echo -e "${YELLOW}üîÑ Trocando shell padr√£o para zsh...${NC}"
  chsh -s "$(which zsh)"
fi

#--------------------------------------------------------------
# FIM
#--------------------------------------------------------------
echo -e "\n${GREEN}‚úÖ Instala√ß√£o conclu√≠da com sucesso! Reinicie o terminal ou digite 'zsh'.${NC}"
